{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  user: null,\n  token: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    loginStart: state => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    loginSuccess: (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.error = null;\n    },\n    loginFailure: (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = false;\n      state.user = null;\n      state.token = null;\n      state.error = action.payload;\n    },\n    logout: state => {\n      state.isAuthenticated = false;\n      state.user = null;\n      state.token = null;\n      state.error = null;\n    },\n    updateUser: (state, action) => {\n      state.user = {\n        ...state.user,\n        ...action.payload\n      };\n    },\n    setError: (state, action) => {\n      state.error = action.payload;\n    },\n    clearError: state => {\n      state.error = null;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logout,\n  updateUser,\n  setError,\n  clearError\n} = authSlice.actions;\nexport default authSlice.reducer;\n\n// Selectors\nexport const selectUser = state => state.auth.user;\nexport const selectToken = state => state.auth.token;\nexport const selectIsAuthenticated = state => state.auth.isAuthenticated;\nexport const selectIsLoading = state => state.auth.isLoading;\nexport const selectError = state => state.auth.error;","map":{"version":3,"names":["createSlice","initialState","user","token","isAuthenticated","isLoading","error","authSlice","name","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","logout","updateUser","setError","clearError","actions","reducer","selectUser","auth","selectToken","selectIsAuthenticated","selectIsLoading","selectError"],"sources":["C:/laragon/www/africhama-app/frontend/src/store/authSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  user: null,\r\n  token: null,\r\n  isAuthenticated: false,\r\n  isLoading: false,\r\n  error: null\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    loginStart: (state) => {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    loginSuccess: (state, action) => {\r\n      state.isLoading = false;\r\n      state.isAuthenticated = true;\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.error = null;\r\n    },\r\n    loginFailure: (state, action) => {\r\n      state.isLoading = false;\r\n      state.isAuthenticated = false;\r\n      state.user = null;\r\n      state.token = null;\r\n      state.error = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.isAuthenticated = false;\r\n      state.user = null;\r\n      state.token = null;\r\n      state.error = null;\r\n    },\r\n    updateUser: (state, action) => {\r\n      state.user = { ...state.user, ...action.payload };\r\n    },\r\n    setError: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { \r\n  loginStart, \r\n  loginSuccess, \r\n  loginFailure, \r\n  logout, \r\n  updateUser,\r\n  setError,\r\n  clearError\r\n} = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n\r\n// Selectors\r\nexport const selectUser = (state) => state.auth.user;\r\nexport const selectToken = (state) => state.auth.token;\r\nexport const selectIsAuthenticated = (state) => state.auth.isAuthenticated;\r\nexport const selectIsLoading = (state) => state.auth.isLoading;\r\nexport const selectError = (state) => state.auth.error;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,IAAI;EACVC,KAAK,EAAE,IAAI;EACXC,eAAe,EAAE,KAAK;EACtBC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC5BQ,IAAI,EAAE,MAAM;EACZP,YAAY;EACZQ,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACN,SAAS,GAAG,IAAI;MACtBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDM,YAAY,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACP,eAAe,GAAG,IAAI;MAC5BO,KAAK,CAACT,IAAI,GAAGW,MAAM,CAACC,OAAO,CAACZ,IAAI;MAChCS,KAAK,CAACR,KAAK,GAAGU,MAAM,CAACC,OAAO,CAACX,KAAK;MAClCQ,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDS,YAAY,EAAEA,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACP,eAAe,GAAG,KAAK;MAC7BO,KAAK,CAACT,IAAI,GAAG,IAAI;MACjBS,KAAK,CAACR,KAAK,GAAG,IAAI;MAClBQ,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDE,MAAM,EAAGL,KAAK,IAAK;MACjBA,KAAK,CAACP,eAAe,GAAG,KAAK;MAC7BO,KAAK,CAACT,IAAI,GAAG,IAAI;MACjBS,KAAK,CAACR,KAAK,GAAG,IAAI;MAClBQ,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDW,UAAU,EAAEA,CAACN,KAAK,EAAEE,MAAM,KAAK;MAC7BF,KAAK,CAACT,IAAI,GAAG;QAAE,GAAGS,KAAK,CAACT,IAAI;QAAE,GAAGW,MAAM,CAACC;MAAQ,CAAC;IACnD,CAAC;IACDI,QAAQ,EAAEA,CAACP,KAAK,EAAEE,MAAM,KAAK;MAC3BF,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDK,UAAU,EAAGR,KAAK,IAAK;MACrBA,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXI,UAAU;EACVE,YAAY;EACZG,YAAY;EACZC,MAAM;EACNC,UAAU;EACVC,QAAQ;EACRC;AACF,CAAC,GAAGZ,SAAS,CAACa,OAAO;AAErB,eAAeb,SAAS,CAACc,OAAO;;AAEhC;AACA,OAAO,MAAMC,UAAU,GAAIX,KAAK,IAAKA,KAAK,CAACY,IAAI,CAACrB,IAAI;AACpD,OAAO,MAAMsB,WAAW,GAAIb,KAAK,IAAKA,KAAK,CAACY,IAAI,CAACpB,KAAK;AACtD,OAAO,MAAMsB,qBAAqB,GAAId,KAAK,IAAKA,KAAK,CAACY,IAAI,CAACnB,eAAe;AAC1E,OAAO,MAAMsB,eAAe,GAAIf,KAAK,IAAKA,KAAK,CAACY,IAAI,CAAClB,SAAS;AAC9D,OAAO,MAAMsB,WAAW,GAAIhB,KAAK,IAAKA,KAAK,CAACY,IAAI,CAACjB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}