{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  subscription: null,\n  maintenanceStatus: null,\n  isLoading: false,\n  error: null\n};\nconst subscriptionSlice = createSlice({\n  name: 'subscription',\n  initialState,\n  reducers: {\n    fetchSubscriptionStart: state => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    fetchSubscriptionSuccess: (state, action) => {\n      state.isLoading = false;\n      state.subscription = action.payload.subscription;\n      state.maintenanceStatus = action.payload.maintenanceStatus;\n      state.error = null;\n    },\n    fetchSubscriptionFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    subscribeStart: state => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    subscribeSuccess: (state, action) => {\n      state.isLoading = false;\n      state.subscription = action.payload;\n      state.error = null;\n    },\n    subscribeFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    payMaintenanceStart: state => {\n      state.isLoading = true;\n      state.error = null;\n    },\n    payMaintenanceSuccess: (state, action) => {\n      state.isLoading = false;\n      state.maintenanceStatus = action.payload;\n      state.error = null;\n    },\n    payMaintenanceFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    clearError: state => {\n      state.error = null;\n    }\n  }\n});\nexport const {\n  fetchSubscriptionStart,\n  fetchSubscriptionSuccess,\n  fetchSubscriptionFailure,\n  subscribeStart,\n  subscribeSuccess,\n  subscribeFailure,\n  payMaintenanceStart,\n  payMaintenanceSuccess,\n  payMaintenanceFailure,\n  clearError\n} = subscriptionSlice.actions;\nexport default subscriptionSlice.reducer;\n\n// Selectors\nexport const selectSubscription = state => state.subscription.subscription;\nexport const selectMaintenanceStatus = state => state.subscription.maintenanceStatus;\nexport const selectIsLoading = state => state.subscription.isLoading;\nexport const selectError = state => state.subscription.error;","map":{"version":3,"names":["createSlice","initialState","subscription","maintenanceStatus","isLoading","error","subscriptionSlice","name","reducers","fetchSubscriptionStart","state","fetchSubscriptionSuccess","action","payload","fetchSubscriptionFailure","subscribeStart","subscribeSuccess","subscribeFailure","payMaintenanceStart","payMaintenanceSuccess","payMaintenanceFailure","clearError","actions","reducer","selectSubscription","selectMaintenanceStatus","selectIsLoading","selectError"],"sources":["C:/laragon/www/africhama-app/frontend/src/store/subscriptionSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  subscription: null,\r\n  maintenanceStatus: null,\r\n  isLoading: false,\r\n  error: null\r\n};\r\n\r\nconst subscriptionSlice = createSlice({\r\n  name: 'subscription',\r\n  initialState,\r\n  reducers: {\r\n    fetchSubscriptionStart: (state) => {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    fetchSubscriptionSuccess: (state, action) => {\r\n      state.isLoading = false;\r\n      state.subscription = action.payload.subscription;\r\n      state.maintenanceStatus = action.payload.maintenanceStatus;\r\n      state.error = null;\r\n    },\r\n    fetchSubscriptionFailure: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    subscribeStart: (state) => {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    subscribeSuccess: (state, action) => {\r\n      state.isLoading = false;\r\n      state.subscription = action.payload;\r\n      state.error = null;\r\n    },\r\n    subscribeFailure: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    payMaintenanceStart: (state) => {\r\n      state.isLoading = true;\r\n      state.error = null;\r\n    },\r\n    payMaintenanceSuccess: (state, action) => {\r\n      state.isLoading = false;\r\n      state.maintenanceStatus = action.payload;\r\n      state.error = null;\r\n    },\r\n    payMaintenanceFailure: (state, action) => {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    clearError: (state) => {\r\n      state.error = null;\r\n    }\r\n  }\r\n});\r\n\r\nexport const { \r\n  fetchSubscriptionStart, \r\n  fetchSubscriptionSuccess, \r\n  fetchSubscriptionFailure,\r\n  subscribeStart,\r\n  subscribeSuccess,\r\n  subscribeFailure,\r\n  payMaintenanceStart,\r\n  payMaintenanceSuccess,\r\n  payMaintenanceFailure,\r\n  clearError\r\n} = subscriptionSlice.actions;\r\n\r\nexport default subscriptionSlice.reducer;\r\n\r\n// Selectors\r\nexport const selectSubscription = (state) => state.subscription.subscription;\r\nexport const selectMaintenanceStatus = (state) => state.subscription.maintenanceStatus;\r\nexport const selectIsLoading = (state) => state.subscription.isLoading;\r\nexport const selectError = (state) => state.subscription.error;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}